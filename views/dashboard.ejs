<%- include('./layouts/_header.ejs'); %>

<style>

body{
    background-color: rgba(210, 240, 236, 0.4);
    }


  /* Add your custom CSS styling here */
  .form-row {
    border: 1px solid #ccc;
    background-color: #f9f9f9;
    padding: 10px;
  }

  /* Add pointer cursor to the name toggle */
  .name-toggle {
    cursor: pointer;
    font-weight: bold; /* Added style for the name */
  }

  /* Use Flexbox to make the form span the full width */
  .form-container {
    display: flex;
    flex-direction: column;
    width: 100%;

    .containerWidth {
        min-width:200vh;
    }


  }

  .formWrapped {
    display: table-row;
    /* border: 2px solid red; */
  }
</style>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="container containerWidth mt-5">
  <div class="row">

<!-- Left side table -->
<div class="col-md-7">

    <!-- <h1 class="mb-4">Data Table with Bootstrap</h1> -->
  
    <div class="table-responsive">
        <div class="card-header bg-primary text-white text-center">
            <h3 class="mb-0 inter_head">Selected Student</h3>
          </div>
      <table class="table table-striped table-light">
        <thead>
          <tr>
            <th scope="col">Name</th>
            <th scope="col">Job Role</th>
            <th scope="col">Company</th>
            <th scope="col">Date</th>
            <th scope="col">Actions</th>
          </tr>
        </thead>
        <tbody>
          <% Result.forEach((item, index) => { %>
            <tr>
              <td>
                <input type="text" class="form-control" id="studentName<%= index %>" required value="<%= item.name %>">
              </td>
              <td>
                <input type="text" class="form-control" id="job_Role<%= index %>" required value="<%= item.job_Role %>">
              </td>
              <td>
                <select class="form-control" id="companyName<%= index %>" required>
                  <option value="" disabled selected>Select a company</option>
                  <option value="Amazon" <%= item.companyName === 'Amazon' ? 'selected' : '' %>>Amazon</option>
                  <option value="Flipkart" <%= item.companyName === 'Flipkart' ? 'selected' : '' %>>Flipkart</option>
                  <option value="Google" <%= item.companyName === 'Google' ? 'selected' : '' %>>Google</option>
                  <option value="Microsoft" <%= item.companyName === 'Microsoft' ? 'selected' : '' %>>Microsoft</option>
                  <option value="Apple" <%= item.companyName === 'Apple' ? 'selected' : '' %>>Apple</option>
                  <option value="Samsung" <%= item.companyName === 'Samsung' ? 'selected' : '' %>>Samsung</option>
                  <option value="IBM" <%= item.companyName === 'IBM' ? 'selected' : '' %>>IBM</option>
                  <option value="Intel" <%= item.companyName === 'Intel' ? 'selected' : '' %>>Intel</option>
                  <option value="Oracle" <%= item.companyName === 'Oracle' ? 'selected' : '' %>>Oracle</option>
                  <option value="Adobe" <%= item.companyName === 'Adobe' ? 'selected' : '' %>>Adobe</option>
                  <option value="Facebook" <%= item.companyName === 'Facebook' ? 'selected' : '' %>>Facebook</option>
                  <option value="LinkedIn" <%= item.companyName === 'LinkedIn' ? 'selected' : '' %>>LinkedIn</option>
                 
                </select>
                
              </td>
              <td>
                <input type="date" class="form-control" id="interviewDate<%= index %>" required value="<%= item.date %>">
              </td>
              <td>
                <div class="btn-group">
                  <button type="button" class="btn btn-sm btn-success add-row" onclick="scheduleInterview(<%= index %>)">
                    <i class="fa fa-plus"></i>
                  </button>
                  <form action="/dashboard/delete/<%= item._id %>" method="post">
                    <button type="submit" class="btn btn-sm btn-danger remove-row">
                      <i class="fa fa-trash"></i>
                    </button>
                  </form>  
                </div>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
  

   <!-- Right side table -->
<div class="col-md-5">
    <div class="card">
      <div class="card-header bg-primary text-white text-center">
        <h3 class="mb-0 inter_head">Scheduled Interview</h3>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-bordered table-hover">
            <thead>
              <tr>
                <th >Student Name</th>
                <th style="width: 150px;">Company Name</th>
                <th style="width: 180px;">Date</th>
              <th style="width: 20px;">Action</th>
              </tr>
            </thead>
            <tbody id="rightTableBody">
              <!-- Content will be dynamically added here -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  


  </div>
</div>

<!-- Bootstrap Icons CDN Link -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.18.0/font/bootstrap-icons.css" rel="stylesheet">

<%- include('./layouts/_footer.ejs'); %>



<!-- Add a script tag at the end of your HTML body to include the JavaScript code -->
<script>
    // Function to update the right-side table when the button is clicked
    function scheduleInterview(index) {
      const studentName = document.getElementById("studentName" + index)?.value;
      const companyName = document.getElementById("companyName" + index)?.value;
      const interviewDate = document.getElementById("interviewDate" + index)?.value;
  
      // Get the right-side table body
      const rightTableBody = document.getElementById("rightTableBody");
  
      // Check if the row for this interview already exists in the right-side table
      const existingRow = rightTableBody.querySelector(`tr[data-index="${index}"]`);
  
      if (existingRow) {
        // If the row exists, update its content with the latest values
        existingRow.innerHTML = `
          <td>${studentName}</td>
          <td>${companyName}</td>
          <td>${interviewDate}</td>
          <td>
            <button type="button" class="btn btn-sm btn-danger remove-row" onclick="removeInterviewRow(${index})">
              <i class="fa fa-trash"></i>
            </button>
          </td>
        `;
      } else {
        // If the row doesn't exist, create a new row for this interview
        const newRow = document.createElement("tr");
        newRow.setAttribute("data-index", index);
        newRow.innerHTML = `
          <td>${studentName}</td>
          <td>${companyName}</td>
          <td>${interviewDate}</td>
          <td>
            <button type="button" class="btn btn-sm btn-danger remove-row" onclick="removeInterviewRow(${index})">
              <i class="fa fa-trash"></i>
            </button>
          </td>
        `;
        rightTableBody.appendChild(newRow);
      }
  
      // Disable the corresponding "Add" button in the left table
      const addButtons = document.querySelectorAll('.add-row');
      if (addButtons[index]) {
        addButtons[index].disabled = true;
      }
    }
  
    // Function to remove the row from both tables
    function removeInterviewRow(index) {
      const rightTableBody = document.getElementById("rightTableBody");
      const rowToRemove = rightTableBody.querySelector(`tr[data-index="${index}"]`);
      if (rowToRemove) {
        rowToRemove.parentNode.removeChild(rowToRemove);
      }
  
      // Re-enable the corresponding "Add" button in the left table
      const addButtons = document.querySelectorAll('.add-row');
      if (addButtons[index]) {
        addButtons[index].disabled = false;
      }
    }
  
    // Attach event listeners to the "Add" buttons after the DOM is ready
    document.addEventListener('DOMContentLoaded', function () {
      const addButtons = document.querySelectorAll('.add-row');
      addButtons.forEach((button, index) => {
        button.addEventListener('click', () => scheduleInterview(index));
      });
    });
  </script>
  